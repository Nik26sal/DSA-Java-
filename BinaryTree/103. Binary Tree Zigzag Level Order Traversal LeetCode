/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        int flag =1;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        List<List<Integer>> list = new ArrayList<>();
        if(root == null)return list;
        while(q.size()>0){
            List<Integer> li = new ArrayList<>();
            int size = q.size();
            for(int i=0;i<size;i++){
                TreeNode r = q.remove();
                if(r != null && r.left != null){
                    q.add(r.left);
                }
                if(r != null && r.right != null){
                    q.add(r.right);
                }
                li.add(r.val);
            }
            if(flag == 1){
                list.add(li);
                flag =0;
            }
            else{
                Collections.reverse(li);
                list.add(li);
                flag =1;
            }
        }
        return list;
    }
}
