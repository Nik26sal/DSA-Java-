/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        
        List<Integer> list = new ArrayList<>();
        if (root == null) return list;
        int[] maxLevel = {-1};
        filler(root, 0, maxLevel, list);
        return list;
    }
    private void filler(TreeNode root, int level, int[] maxLevel, List<Integer> list) {
        if (root == null) return;
        
        if (level > maxLevel[0]) {
            list.add(root.val);
            maxLevel[0] = level;
        }
        filler(root.left, level + 1, maxLevel, list);
        filler(root.right, level + 1, maxLevel, list);
    }
}
