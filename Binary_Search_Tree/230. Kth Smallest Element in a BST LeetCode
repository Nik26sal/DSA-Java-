/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    // private int height(TreeNode root){
    //     if(root == null){
    //         return 0;
    //     }
    //     return 1+(Math.max(height(root.left),height(root.right)));
    // }
    private void InOrder(TreeNode root,ArrayList<Integer> arr){
        if(root == null){
            return;
        }
        
        InOrder(root.left,arr);
        arr.add(root.val);
        InOrder(root.right,arr);
        
    }
    public int kthSmallest(TreeNode root, int k) {
        ArrayList<Integer> arr = new ArrayList<>();
        InOrder(root,arr);
        //System.out.println(arr);
        return arr.get(k-1);
    }
}
